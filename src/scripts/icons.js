import fs from 'fs'
import path from 'path'
import * as prettier from 'prettier'

const __dirname = path.dirname(new URL(import.meta.url).pathname)

const inputFile = path.join(__dirname, '../../node_modules/@iconify-json/tabler/icons.json')
const outputFile = path.join(__dirname, '../../src/icons.d.ts')

// Read and parse the icons.json file
const iconsJson = fs.readFileSync(inputFile, 'utf-8')
const icons = JSON.parse(iconsJson).icons

// Initialize typings string
let typings = `
    /* eslint-disable */
    // @ts-nocheck

    // This file is generated by scripts/generate-icon-types.js

    export type Icon =  React.ReactSvgElement

    export {}
    declare global {
      ${Object.keys(icons)
        .map(iconName => `const Icon${toPascalCase(iconName)}: Icon`)
        .join('\n')}
    }`

// Write typings to a .ts file
fs.writeFileSync(outputFile, await format(typings))

function toPascalCase(str) {
  return str
    .replace(/-([a-z0-9])/gi, function (match, letter) {
      return letter.toUpperCase()
    })
    .replace(/^(.)/, function (match, letter) {
      return letter.toUpperCase()
    })
}

// format with Prettier
function format(str) {
  return prettier.format(str, { parser: 'typescript' })
}
